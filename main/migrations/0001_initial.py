# Generated by Django 3.2.3 on 2021-06-01 12:29

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(max_length=200, verbose_name='Название в виде url')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='дата создания')),
                ('edited', models.DateTimeField(auto_now=True, null=True, verbose_name='дата редактирования')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_categories_posts', to='main.category', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'объявление',
                'verbose_name_plural': 'объявления',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='Тег')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'теги',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'ordering': ('first_name',),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.post')),
                ('color', models.CharField(max_length=20, verbose_name='цвет')),
                ('brand', models.CharField(max_length=20, verbose_name='марка')),
                ('mileage', models.PositiveIntegerField(verbose_name='пробег')),
            ],
            options={
                'verbose_name': 'автомобиль',
                'verbose_name_plural': 'автомобили',
            },
            bases=('main.post',),
        ),
        migrations.CreateModel(
            name='PersonalItem',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.post')),
                ('condition', models.CharField(choices=[('new', 'новое'), ('used', 'б/у')], default='used', max_length=20, verbose_name='состояние')),
            ],
            options={
                'verbose_name': 'личные вещи',
                'verbose_name_plural': 'личные вещи',
            },
            bases=('main.post',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.post')),
                ('contractor', models.CharField(choices=[('private_person', 'частное лицо'), ('organization', 'организация')], default='private_person', max_length=20, verbose_name='вид исполнителя')),
            ],
            options={
                'verbose_name': 'услуга',
                'verbose_name_plural': 'услуги',
            },
            bases=('main.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_sellers_posts', to='main.person', verbose_name='продавец'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='post_posts', to='main.Tag', verbose_name='Теги'),
        ),
        migrations.CreateModel(
            name='ArchivedPost',
            fields=[
            ],
            options={
                'verbose_name': 'архивное объявление',
                'verbose_name_plural': 'архивные объявления',
                'ordering': ['created'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.post',),
        ),
    ]
